{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.routes.ts","./src/app/pages/home.component.ts","./src/app/pages/monitor.component.ts","./src/app/shared/metrics.service.ts","./src/app/shared/peer-pane.component.ts","./src/app/shared/rtc.service.ts","./src/app/shared/signaling.service.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterLink, RouterOutlet],\n  template: `\n  <main class=\"container\">\n    <router-outlet></router-outlet>\n  </main>\n  `\n})\nexport class AppComponent {}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home.component';\nimport { MonitorComponent } from './pages/monitor.component';\n\nexport const APP_ROUTES: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'monitor', component: MonitorComponent },\n  { path: '**', redirectTo: '' }\n];\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PeerPaneComponent, PeerConfig } from '../shared/peer-pane.component';\nimport { MonitorComponent } from './monitor.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  imports: [CommonModule, PeerPaneComponent, MonitorComponent],\n  template: `\n  <div class=\"page-content\">\n    <h1>WebRTC P2P Demo</h1>\n    \n    <div class=\"grid2\">\n      <app-peer-pane [config]=\"peerA()\" [autoJoin]=\"true\"></app-peer-pane>\n      <app-peer-pane [config]=\"peerB()\" [autoJoin]=\"true\"></app-peer-pane>\n    </div>\n\n    <div class=\"monitor-panel\">\n      <app-monitor></app-monitor>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .page-content {\n      padding: 32px;\n      max-width: 1400px;\n      margin: 0 auto;\n    }\n    h1 {\n      margin-bottom: 32px;\n    }\n    .grid2 {\n      margin-bottom: 32px;\n      gap: 32px;\n    }\n    .monitor-panel {\n      margin-top: 32px;\n      padding-top: 32px;\n      border-top: 1px solid var(--line);\n    }\n  `]\n})\nexport class HomeComponent {\n  private room = 'demo';\n  private wsUrl = 'ws://localhost:8081';\n  private stunUrl = 'stun:127.0.0.1:3478';\n  private stunHttp = 'http://localhost:8791/metrics';\n\n  peerA(): PeerConfig {\n    return {\n      nick: 'Alice',\n      initiator: true,\n      room: this.room,\n      wsUrl: this.wsUrl,\n      stunUrl: this.stunUrl,\n      stunHttp: this.stunHttp\n    };\n  }\n\n  peerB(): PeerConfig {\n    return {\n      nick: 'Bob',\n      initiator: false,\n      room: this.room,\n      wsUrl: this.wsUrl,\n      stunUrl: this.stunUrl,\n      stunHttp: this.stunHttp\n    };\n  }\napply() {\n    // signals will recompute; input-bound components will pick up changes\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MetricsService } from '../shared/metrics.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-monitor',\n  imports: [CommonModule, FormsModule],\n  providers: [MetricsService],\n  template: `\n  <div class=\"card\">\n    <div class=\"header\">\n      <div><b>STUN Metrics</b></div>\n      <button (click)=\"toggle()\">{{ polling ? 'Stop' : 'Start' }} Polling</button>\n    </div>\n    <pre>{{ metricsJson }}</pre>\n  </div>\n  `,\n  styles: [`\n    .card {\n      background: var(--bg2);\n      border: 1px solid var(--line);\n      border-radius: 4px;\n      padding: 16px;\n    }\n    .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 16px;\n    }\n    pre {\n      height: 200px;\n      overflow: auto;\n      margin: 0;\n      font-size: 13px;\n      line-height: 1.5;\n    }\n  `]\n})\nexport class MonitorComponent {\n  stunHttp = 'http://localhost:8791/metrics';\n  metricsJson = '';\n  polling = false;\n  private timer?: any;\n\n  constructor(private metrics: MetricsService) {}\n\n  toggle(){\n    if (this.polling) { this.polling = false; clearInterval(this.timer); this.timer = null; return; }\n    this.polling = true;\n    const tick = async () => {\n      try {\n        const data = await this.metrics.fetchMetrics(this.stunHttp);\n        this.metricsJson = JSON.stringify(data, null, 2);\n      } catch (e: any) {\n        this.metricsJson = 'fetch failed: ' + (e?.message ?? e);\n      }\n    };\n    tick();\n    this.timer = setInterval(tick, 1500);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MetricsService {\n  async fetchMetrics(url: string){\n    const r = await fetch(url, { cache: 'no-store' });\n    if (!r.ok) throw new Error(`HTTP ${r.status}`);\n    return r.json();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SignalingService } from './signaling.service';\nimport { RtcService, PeerSession, IceState, DcState } from './rtc.service';\nimport { MetricsService } from './metrics.service';\n\nexport type PeerConfig = {\n  nick: string;\n  room: string;\n  wsUrl: string;\n  stunUrl: string;\n  stunHttp?: string;\n  initiator: boolean;\n};\n\n@Component({\n  standalone: true,\n  selector: 'app-peer-pane',\n  imports: [CommonModule, FormsModule],\n  providers: [SignalingService, RtcService, MetricsService],\n  template: `\n  <div class=\"card panel\">\n    <div class=\"header\">\n      <span class=\"tag\">{{ config?.nick }}</span>\n      <span class=\"tag\">room: {{ config?.room }}</span>\n      <span class=\"tag\">WS: <b>{{ wsState }}</b></span>\n      <span class=\"tag\">DC: <b [ngClass]=\"dcStateClass()\">{{ dcState || '-' }}</b></span>\n      <span class=\"tag\">ICE: <b [ngClass]=\"iceStateClass()\">{{ iceState || '-' }}</b></span>\n    </div>\n\n    <div class=\"toolbar\">\n      <button (click)=\"doJoin()\" [disabled]=\"wsState==='connecting'\">Join</button>\n      <button (click)=\"hangup()\">Hangup</button>\n      <button (click)=\"icedump()\">ICE Dump</button>\n      <button (click)=\"toggleStats()\">{{ statsOn ? 'Stop' : 'Start' }} Stats</button>\n    </div>\n\n    <div class=\"content\" [class.has-ice]=\"iceVisible\" [class.no-ice]=\"!iceVisible\">\n      <textarea [(ngModel)]=\"logText\" readonly></textarea>\n      <textarea *ngIf=\"iceVisible\" [(ngModel)]=\"iceText\" readonly></textarea>\n      <div class=\"composer\">\n        <input [(ngModel)]=\"sendText\" placeholder=\"enter text...\" />\n        <button (click)=\"send()\" [disabled]=\"!canSend()\">Send</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .card.panel {\n      height: 100%;\n      min-height: 500px;\n    }\n    .header {\n      padding: 16px !important;\n    }\n    .toolbar {\n      padding: 16px !important;\n    }\n    .content {\n      padding: 16px !important;\n    }\n    .content textarea {\n      padding: 12px !important;\n      min-height: 200px;\n    }\n    .composer {\n      margin-top: 16px;\n    }\n    .composer input {\n      padding: 8px 12px;\n    }\n    .tag {\n      background: var(--bg);\n      padding: 4px 8px;\n      border-radius: 4px;\n    }\n  `]\n})\nexport class PeerPaneComponent implements OnInit, OnDestroy {\n  @Input({ required: true }) config!: PeerConfig;\n  @Input() autoJoin = false;\n\n  wsState: 'idle'|'connecting'|'open'|'closed'|'error' = 'idle';\n  dcState?: DcState;\n  iceState?: IceState;\n  iceVisible = false;\n  statsOn = false;\n\n  logText = '';\n  iceText = '';\n  sendText = '';\n\n  private session?: PeerSession;\n  private pendingSignals: any[] = [];\n  private joined = false;\n  private _statsCb = (arr: any[]) => { this.iceText = JSON.stringify(arr, null, 2); };\n\n  constructor(\n    private signal: SignalingService,\n    private rtc: RtcService,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef\n  ){}\n\n  ngOnInit(){\n    this.signal.state$.subscribe(s => this.wsState = s);\n    this.signal.joined$.subscribe(({ id, room }) => {\n      this.joined = true;\n      this.log(`[joined] id=${id} room=${room}`);\n      this.setupSession();\n    });\n    this.signal.peers$.subscribe(update => {\n      if (update && this.joined) {\n        this.log(`[peers] count=${update.peers.length}`);\n        // If we're the initiator and there are peers, start the connection\n        if (this.config.initiator && update.peers.length > 0) {\n          this.setupSession();\n          this.session?.startOffer();\n        }\n      }\n    });\n    this.signal.signal$.subscribe(({ from, data }) => {\n      // If we haven't created a PeerSession yet, buffer incoming signals\n      // so they aren't dropped by a race between signaling and session setup.\n      if (!this.session) {\n        this.pendingSignals.push({ from, data });\n        return;\n      }\n      if ((data as any).sdp) this.session.handleRemoteSdp((data as any).sdp);\n      else if ((data as any).candidate) this.session.handleRemoteCandidate((data as any).candidate);\n    });\n    if (this.autoJoin) setTimeout(()=>this.doJoin(), 0);\n  }\n\n  ngOnDestroy(){ this.hangup(); }\n\n  doJoin(){\n    if (!this.config) return;\n    this.signal.connect(this.config.wsUrl);\n    this.signal.join(this.config.room, this.config.nick);\n  }\n\n  setupSession(){\n    this.session?.close();\n    this.session = this.rtc.createSession(this.config.initiator, this.config.stunUrl, {\n      onSignal: (data)=> this.ngZone.run(() => this.signal.sendSignal(data)),\n      onIceState: (s)=> this.ngZone.run(() => {\n        this.iceState = s;\n        this.cdr.detectChanges();\n      }),\n      onDcState: (s)=> this.ngZone.run(() => {\n        this.dcState = s;\n        this.cdr.detectChanges();\n      }),\n      onDcMessage: (t)=> this.ngZone.run(() => this.log(`[rx] ${t}`))\n    });\n    // If there were any signals received before the session existed, replay them now\n    if (this.pendingSignals.length) {\n      for (const p of this.pendingSignals) {\n        const data = p.data;\n        if ((data as any).sdp) this.session.handleRemoteSdp((data as any).sdp);\n        else if ((data as any).candidate) this.session.handleRemoteCandidate((data as any).candidate);\n      }\n      this.pendingSignals = [];\n    }\n  }\n\n  hangup(){\n    try { this.session?.close(); } catch {}\n    this.session = undefined; this.dcState = undefined; this.iceState = undefined;\n  }\n\n  send(){ if (this.session && this.sendText.trim()) { this.session.send(this.sendText); this.log(`[tx] ${this.sendText}`); this.sendText=''; } }\n  canSend(){ return !!this.session && this.dcState === 'open'; }\n\n  icedump(){ this.iceVisible = true; if (this.session) this.session.startStatsLoop(this._statsCb); }\n  toggleStats(){ this.statsOn = !this.statsOn; this.iceVisible = this.statsOn; if (this.session) (this.statsOn ? this.session.startStatsLoop(this._statsCb) : this.session.stopStatsLoop()); }\n\n  log(msg: string){ \n    this.ngZone.run(() => {\n      this.logText += (this.logText ? '\\n' : '') + msg;\n      this.cdr.detectChanges();\n      // Force textarea to scroll to bottom\n      queueMicrotask(() => {\n        const textarea = document.querySelector('textarea') as HTMLTextAreaElement;\n        if (textarea) {\n          textarea.scrollTop = textarea.scrollHeight;\n        }\n      });\n    });\n  }\n\n  dcStateClass(){ return { 'ok': this.dcState==='open', 'warn': this.dcState==='connecting', 'bad': this.dcState==='closed' || this.dcState==='closing' }; }\n  iceStateClass(){ return { 'ok': this.iceState==='connected' || this.iceState==='completed', 'warn': this.iceState==='checking', 'bad': this.iceState==='failed' || this.iceState==='disconnected' || this.iceState==='closed' }; }\n}\n","import { Injectable } from '@angular/core';\n\nexport type IceState = 'new'|'checking'|'connected'|'completed'|'failed'|'disconnected'|'closed';\nexport type DcState = 'connecting'|'open'|'closing'|'closed';\n\nexport type SessionCallbacks = {\n  onSignal: (data: any) => void;  // why: bubble up sdp/candidate\n  onIceState?: (state: IceState) => void;\n  onDcState?: (state: DcState) => void;\n  onDcMessage?: (text: string) => void;\n};\n\nexport class PeerSession {\n  pc: RTCPeerConnection;\n  dc?: RTCDataChannel;\n  private statsTimer?: any;\n\n  constructor(readonly initiator: boolean, stunUrl: string, private cb: SessionCallbacks){\n    this.pc = new RTCPeerConnection({ iceServers: [{ urls: stunUrl }] });\n    this.pc.onicecandidate = (e) => { if (e.candidate) this.cb.onSignal({ candidate: e.candidate }); };\n    this.pc.oniceconnectionstatechange = () => {\n      const s = this.pc.iceConnectionState as IceState;\n      this.cb.onIceState?.(s);\n    };\n    this.pc.ondatachannel = (e) => this.attachDc(e.channel);\n    if (initiator) {\n      // Configure data channel for low latency\n      const dc = this.pc.createDataChannel('chat', {\n        ordered: true, // Guarantee message order\n        maxRetransmits: 0 // Don't retry - better to show new messages than retry old ones\n      });\n      this.attachDc(dc);\n    }\n  }\n\n  private attachDc(dc: RTCDataChannel){\n    this.dc = dc;\n    this.cb.onDcState?.(dc.readyState as DcState);\n    dc.onopen = () => this.cb.onDcState?.(dc.readyState as DcState);\n    dc.onclose = () => this.cb.onDcState?.(dc.readyState as DcState);\n    dc.onmessage = (e) => this.cb.onDcMessage?.(String(e.data ?? ''));\n  }\n\n  async startOffer(){\n    const offer = await this.pc.createOffer({ offerToReceiveAudio:false, offerToReceiveVideo:false });\n    await this.pc.setLocalDescription(offer);\n    this.cb.onSignal({ sdp: this.pc.localDescription });\n  }\n\n  async handleRemoteSdp(sdp: RTCSessionDescriptionInit){\n    await this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n    if (sdp.type === 'offer'){\n      const answer = await this.pc.createAnswer();\n      await this.pc.setLocalDescription(answer);\n      this.cb.onSignal({ sdp: this.pc.localDescription });\n    }\n  }\n\n  async handleRemoteCandidate(candidate: RTCIceCandidateInit){\n    try { await this.pc.addIceCandidate(new RTCIceCandidate(candidate)); } catch {}\n  }\n\n  send(text: string){\n    if (!this.dc || this.dc.readyState !== 'open') return;\n    try { this.dc.send(text); } catch {}\n  }\n\n  startStatsLoop(onStats: (value: any[]) => void){\n    this.stopStatsLoop();\n    this.statsTimer = setInterval(async () => {\n      try{\n        const stats = await this.pc.getStats();\n        const arr: any[] = [];\n        stats.forEach(s => {\n          if (['local-candidate','remote-candidate','candidate-pair'].includes((s as any).type)) arr.push(s);\n        });\n        onStats(arr);\n      }catch{}\n    }, 1000);\n  }\n  stopStatsLoop(){ if (this.statsTimer) { clearInterval(this.statsTimer); this.statsTimer = null; } }\n\n  close(){\n    this.stopStatsLoop();\n    try { this.dc?.close(); } catch {}\n    try { this.pc.close(); } catch {}\n  }\n}\n\n@Injectable()\nexport class RtcService {\n  createSession(initiator: boolean, stunUrl: string, cb: SessionCallbacks){\n    return new PeerSession(initiator, stunUrl, cb);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nexport type Inbound =\n  | { type: 'joined'; id: string; room: string }\n  | { type: 'peers'; id: string; peers: { id: string; nick?: string }[] }\n  | { type: 'signal'; from: string; data: any };\n\nexport type Outbound =\n  | { type: 'join'; room: string; nick?: string }\n  | { type: 'nick'; nick: string }\n  | { type: 'signal'; data: any; to?: string };\n\nexport type WsState = 'idle'|'connecting'|'open'|'closed'|'error';\n\n@Injectable()\nexport class SignalingService {\n  private ws?: WebSocket;\n  private url?: string;\n  private pendingJoin?: { room: string; nick?: string };\n\n  readonly state$ = new BehaviorSubject<WsState>('idle');\n  readonly joined$ = new Subject<{ id: string; room: string }>();\n  readonly peers$ = new BehaviorSubject<{ id: string; peers: {id: string; nick?: string}[] } | null>(null);\n  readonly signal$ = new Subject<{ from: string; data: any }>();\n\n  connect(url: string){\n    this.url = url;\n    if (this.ws && (this.ws.readyState === WebSocket.OPEN || this.ws.readyState === WebSocket.CONNECTING)) return;\n    this.state$.next('connecting');\n    this.ws = new WebSocket(url);\n    this.ws.onopen = () => {\n      this.state$.next('open');\n      if (this.pendingJoin) {\n        try { this.ws!.send(JSON.stringify({ type:'join', room: this.pendingJoin.room, nick: this.pendingJoin.nick })); } catch {}\n      }\n    };\n    this.ws.onclose = () => this.state$.next('closed');\n    this.ws.onerror = () => this.state$.next('error');\n    this.ws.onmessage = (ev) => {\n      let msg: Inbound;\n      try { msg = JSON.parse(String(ev.data)); } catch { return; }\n      if (msg.type === 'joined') this.joined$.next({ id: msg.id, room: msg.room });\n      else if (msg.type === 'peers') this.peers$.next({ id: msg.id, peers: msg.peers });\n      else if (msg.type === 'signal') this.signal$.next({ from: msg.from, data: msg.data });\n    };\n  }\n\n  send(obj: Outbound){\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) return;\n    try { this.ws.send(JSON.stringify(obj)); } catch {}\n  }\n\n  join(room: string, nick?: string){\n    this.pendingJoin = { room, nick };\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ type:'join', room, nick });\n    }\n  }\n\n  updateNick(nick: string){ this.send({ type: 'nick', nick }); }\n  sendSignal(data: any, to?: string){ this.send(to ? ({ type:'signal', data, to }) : ({ type:'signal', data })); }\n}\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { AppComponent } from './app/app.component';\nimport { APP_ROUTES } from './app/app.routes';\n\nbootstrapApplication(AppComponent, { providers: [provideRouter(APP_ROUTES)] })\n  .catch(err => console.error(err));\n"],"names":["RouterOutlet","AppComponent","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","encapsulation","HomeComponent","MonitorComponent","APP_ROUTES","path","component","redirectTo","CommonModule","PeerPaneComponent","constructor","room","wsUrl","stunUrl","stunHttp","peerA","nick","initiator","peerB","apply","HomeComponent_Template","ɵɵtext","ɵɵadvance","ɵɵproperty","styles","FormsModule","MetricsService","metrics","metricsJson","polling","toggle","_this","clearInterval","timer","tick","_ref","_asyncToGenerator","data","fetchMetrics","JSON","stringify","e","message","arguments","setInterval","ɵɵdirectiveInject","i1","ɵɵProvidersFeature","MonitorComponent_Template","ɵɵlistener","MonitorComponent_Template_button_click_5_listener","ɵɵtextInterpolate1","ɵɵtextInterpolate","url","r","fetch","cache","ok","Error","status","json","factory","ɵfac","SignalingService","RtcService","ɵɵtwoWayListener","PeerPaneComponent_textarea_29_Template_textarea_ngModelChange_0_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","iceText","ɵɵresetView","ɵɵtwoWayProperty","signal","rtc","ngZone","cdr","autoJoin","wsState","iceVisible","statsOn","logText","sendText","pendingSignals","joined","_statsCb","arr","ngOnInit","state$","subscribe","s","joined$","id","log","setupSession","peers$","update","peers","length","config","session","startOffer","signal$","from","push","sdp","handleRemoteSdp","candidate","handleRemoteCandidate","setTimeout","doJoin","ngOnDestroy","hangup","connect","join","close","createSession","onSignal","run","sendSignal","onIceState","iceState","detectChanges","onDcState","dcState","onDcMessage","t","p","undefined","send","trim","canSend","icedump","startStatsLoop","toggleStats","stopStatsLoop","msg","queueMicrotask","textarea","document","querySelector","scrollTop","scrollHeight","dcStateClass","iceStateClass","i2","NgZone","ChangeDetectorRef","inputs","PeerPaneComponent_Template","PeerPaneComponent_Template_button_click_19_listener","PeerPaneComponent_Template_button_click_21_listener","PeerPaneComponent_Template_button_click_23_listener","PeerPaneComponent_Template_button_click_25_listener","PeerPaneComponent_Template_textarea_ngModelChange_28_listener","ɵɵtemplate","PeerPaneComponent_textarea_29_Template","PeerPaneComponent_Template_input_ngModelChange_31_listener","PeerPaneComponent_Template_button_click_32_listener","ɵɵclassProp","i3","NgClass","NgIf","i4","DefaultValueAccessor","NgControlStatus","NgModel","PeerSession","cb","pc","RTCPeerConnection","iceServers","urls","onicecandidate","oniceconnectionstatechange","iceConnectionState","ondatachannel","attachDc","channel","dc","createDataChannel","ordered","maxRetransmits","readyState","onopen","onclose","onmessage","String","offer","createOffer","offerToReceiveAudio","offerToReceiveVideo","setLocalDescription","localDescription","_this2","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","_this3","addIceCandidate","RTCIceCandidate","text","onStats","_this4","statsTimer","stats","getStats","forEach","includes","BehaviorSubject","Subject","ws","WebSocket","OPEN","CONNECTING","next","pendingJoin","onerror","ev","parse","obj","updateNick","to","bootstrapApplication","provideRouter","providers","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}