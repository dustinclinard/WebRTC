{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.routes.ts","./src/app/pages/home.component.ts","./src/app/pages/monitor.component.ts","./src/app/shared/metrics.service.ts","./src/app/shared/peer-pane.component.ts","./src/app/shared/rtc.service.ts","./src/app/shared/signaling.service.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterLink, RouterOutlet],\n  template: `\n  <main class=\"container\">\n    <router-outlet></router-outlet>\n  </main>\n  `\n})\nexport class AppComponent {}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home.component';\nimport { MonitorComponent } from './pages/monitor.component';\n\nexport const APP_ROUTES: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'monitor', component: MonitorComponent },\n  { path: '**', redirectTo: '' }\n];\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PeerPaneComponent, PeerConfig } from '../shared/peer-pane.component';\nimport { MonitorComponent } from './monitor.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  imports: [CommonModule, PeerPaneComponent, MonitorComponent],\n  template: `\n  <div class=\"page-content\">\n    <h1>WebRTC STUN/P2P Demo</h1>\n    \n    <div class=\"grid2\">\n      <app-peer-pane [config]=\"peerA()\" [autoJoin]=\"true\"></app-peer-pane>\n      <app-peer-pane [config]=\"peerB()\" [autoJoin]=\"true\"></app-peer-pane>\n    </div>\n\n    <div class=\"monitor-panel\">\n      <app-monitor></app-monitor>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .page-content {\n      padding: 32px;\n      max-width: 1400px;\n      margin: 0 auto;\n    }\n    h1 {\n      margin-bottom: 32px;\n    }\n    .grid2 {\n      margin-bottom: 32px;\n      gap: 32px;\n    }\n    .monitor-panel {\n      margin-top: 32px;\n      padding-top: 32px;\n      border-top: 1px solid var(--line);\n    }\n  `]\n})\nexport class HomeComponent {\n  private room = 'demo';\n  private wsUrl = 'ws://localhost:8081';\n  private stunUrl = 'stun:127.0.0.1:3478';\n  private stunHttp = 'http://localhost:8791/metrics';\n\n  peerA(): PeerConfig {\n    return {\n      nick: 'Alice',\n      initiator: true,\n      room: this.room,\n      wsUrl: this.wsUrl,\n      stunUrl: this.stunUrl,\n      stunHttp: this.stunHttp\n    };\n  }\n\n  peerB(): PeerConfig {\n    return {\n      nick: 'Bob',\n      initiator: false,\n      room: this.room,\n      wsUrl: this.wsUrl,\n      stunUrl: this.stunUrl,\n      stunHttp: this.stunHttp\n    };\n  }\napply() {\n    // signals will recompute; input-bound components will pick up changes\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MetricsService } from '../shared/metrics.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-monitor',\n  imports: [CommonModule, FormsModule],\n  providers: [MetricsService],\n  template: `\n  <div class=\"card\">\n    <div class=\"header\">\n      <div><b>STUN Metrics</b></div>\n      <button (click)=\"toggle()\">{{ polling ? 'Stop' : 'Start' }} Polling</button>\n    </div>\n    <pre>{{ metricsJson }}</pre>\n  </div>\n  `,\n  styles: [`\n    .card {\n      background: var(--bg2);\n      border: 1px solid var(--line);\n      border-radius: 4px;\n      padding: 16px;\n    }\n    .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 16px;\n    }\n    pre {\n      height: 200px;\n      overflow: auto;\n      margin: 0;\n      font-size: 13px;\n      line-height: 1.5;\n    }\n  `]\n})\nexport class MonitorComponent {\n  stunHttp = 'http://localhost:8791/metrics';\n  metricsJson = '';\n  polling = false;\n  private timer?: any;\n\n  constructor(private metrics: MetricsService) {}\n\n  toggle(){\n    if (this.polling) { this.polling = false; clearInterval(this.timer); this.timer = null; return; }\n    this.polling = true;\n    const tick = async () => {\n      try {\n        const data = await this.metrics.fetchMetrics(this.stunHttp);\n        this.metricsJson = JSON.stringify(data, null, 2);\n      } catch (e: any) {\n        this.metricsJson = 'fetch failed: ' + (e?.message ?? e);\n      }\n    };\n    tick();\n    this.timer = setInterval(tick, 1500);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MetricsService {\n  async fetchMetrics(url: string){\n    const r = await fetch(url, { cache: 'no-store' });\n    if (!r.ok) throw new Error(`HTTP ${r.status}`);\n    return r.json();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SignalingService } from './signaling.service';\nimport { RtcService, PeerSession, IceState, DcState } from './rtc.service';\nimport { MetricsService } from './metrics.service';\n\nexport type PeerConfig = {\n  nick: string;\n  room: string;\n  wsUrl: string;\n  stunUrl: string;\n  stunHttp?: string;\n  initiator: boolean;\n};\n\n@Component({\n  standalone: true,\n  selector: 'app-peer-pane',\n  imports: [CommonModule, FormsModule],\n  providers: [SignalingService, RtcService, MetricsService],\n  template: `\n  <div class=\"card panel\">\n    <div class=\"header\">\n      <span class=\"tag\">{{ config?.nick }}</span>\n      <span class=\"tag\">room: {{ config?.room }}</span>\n      <span class=\"tag\">WS: <b>{{ wsState }}</b></span>\n      <span class=\"tag\">DC: <b [ngClass]=\"dcStateClass()\">{{ dcState || '-' }}</b></span>\n      <span class=\"tag\">ICE: <b [ngClass]=\"iceStateClass()\">{{ iceState || '-' }}</b></span>\n    </div>\n\n    <div class=\"toolbar\">\n      <button (click)=\"doJoin()\" [disabled]=\"wsState==='connecting'\">Join</button>\n      <button (click)=\"hangup()\">Hangup</button>\n      <button (click)=\"toggleStats()\">{{ statsOn ? 'Stop' : 'Start' }} Stats</button>\n    </div>\n\n    <div class=\"content\" [class.has-ice]=\"iceVisible\" [class.no-ice]=\"!iceVisible\">\n      <textarea [(ngModel)]=\"logText\" readonly></textarea>\n      <textarea *ngIf=\"iceVisible\" [(ngModel)]=\"iceText\" readonly></textarea>\n      <div class=\"composer\">\n        <input [(ngModel)]=\"sendText\" placeholder=\"enter text...\" />\n        <button (click)=\"send()\" [disabled]=\"!canSend()\">Send</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .card.panel {\n      height: 100%;\n      min-height: 500px;\n    }\n    .header {\n      padding: 16px !important;\n    }\n    .toolbar {\n      padding: 16px !important;\n    }\n    .content {\n      padding: 16px !important;\n    }\n    .content textarea {\n      padding: 12px !important;\n      min-height: 200px;\n    }\n    .composer {\n      margin-top: 16px;\n    }\n    .composer input {\n      padding: 8px 12px;\n    }\n    .tag {\n      background: var(--bg);\n      padding: 4px 8px;\n      border-radius: 4px;\n    }\n  `]\n})\nexport class PeerPaneComponent implements OnInit, OnDestroy {\n  @Input({ required: true }) config!: PeerConfig;\n  @Input() autoJoin = false;\n\n  wsState: 'idle'|'connecting'|'open'|'closed'|'error' = 'idle';\n  dcState?: DcState;\n  iceState?: IceState;\n  iceVisible = false;\n  statsOn = false;\n\n  logText = '';\n  iceText = '';\n  sendText = '';\n\n  private session?: PeerSession;\n  private pendingSignals: any[] = [];\n  private joined = false;\n  private processedSdpIds = new Set<string>();\n  private _statsCb = (arr: any[]) => { this.iceText = JSON.stringify(arr, null, 2); };\n\n  constructor(\n    private signal: SignalingService,\n    private rtc: RtcService,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef\n  ){}\n\n  ngOnInit(){\n    this.signal.state$.subscribe(s => this.wsState = s);\n    this.signal.joined$.subscribe(({ id, room }) => {\n      this.joined = true;\n      this.log(`[joined] id=${id} room=${room}`);\n      this.setupSession();\n    });\n    this.signal.peers$.subscribe(update => {\n      if (update && this.joined) {\n        this.log(`[peers] count=${update.peers.length}`);\n        // If we're the initiator and there are peers, start the connection\n        if (this.config.initiator && update.peers.length > 0) {\n          this.setupSession();\n          this.session?.startOffer();\n        }\n      }\n    });\n    this.signal.signal$.subscribe(({ from, data }) => {\n      // If we haven't created a PeerSession yet, buffer incoming signals\n      // so they aren't dropped by a race between signaling and session setup.\n      if (!this.session) {\n        this.pendingSignals.push({ from, data });\n        return;\n      }\n      this.processSignalData(data);\n    });\n    if (this.autoJoin) setTimeout(()=>this.doJoin(), 0);\n  }\n\n  ngOnDestroy(){ this.hangup(); }\n\n  doJoin(){\n    if (!this.config) return;\n    this.signal.connect(this.config.wsUrl);\n    this.signal.join(this.config.room, this.config.nick);\n  }\n\n  setupSession(){\n    this.session?.close();\n    this.processedSdpIds.clear(); // Reset SDP tracking for new session\n    this.session = this.rtc.createSession(this.config.initiator, this.config.stunUrl, {\n      onSignal: (data)=> this.ngZone.run(() => this.signal.sendSignal(data)),\n      onIceState: (s)=> this.ngZone.run(() => {\n        this.iceState = s;\n        this.cdr.detectChanges();\n      }),\n      onDcState: (s)=> this.ngZone.run(() => {\n        this.dcState = s;\n        this.cdr.detectChanges();\n      }),\n      onDcMessage: (t)=> this.ngZone.run(() => this.log(`[rx] ${t}`))\n    });\n    // If there were any signals received before the session existed, replay them now\n    if (this.pendingSignals.length) {\n      for (const p of this.pendingSignals) {\n        this.processSignalData(p.data);\n      }\n      this.pendingSignals = [];\n    }\n  }\n\n  private processSignalData(data: any) {\n    if (!this.session) return;\n    \n    if (data.sdp) {\n      // Create a unique ID for this SDP to prevent duplicate processing\n      const sdpId = `${data.sdp.type}-${data.sdp.sdp.slice(0, 50)}`;\n      if (this.processedSdpIds.has(sdpId)) {\n        console.log(`[WebRTC] Ignoring duplicate SDP: ${data.sdp.type}`);\n        return;\n      }\n      this.processedSdpIds.add(sdpId);\n      this.log(`[WebRTC] Processing ${data.sdp.type} SDP`);\n      this.session.handleRemoteSdp(data.sdp);\n    } else if (data.candidate) {\n      this.session.handleRemoteCandidate(data.candidate);\n    }\n  }\n\n  hangup(){\n    try { this.session?.close(); } catch {}\n    this.session = undefined; this.dcState = undefined; this.iceState = undefined;\n    this.processedSdpIds.clear();\n  }\n\n  send(){ if (this.session && this.sendText.trim()) { this.session.send(this.sendText); this.log(`[tx] ${this.sendText}`); this.sendText=''; } }\n  canSend(){ return !!this.session && this.dcState === 'open'; }\n\n  toggleStats(){ this.statsOn = !this.statsOn; this.iceVisible = this.statsOn; if (this.session) (this.statsOn ? this.session.startStatsLoop(this._statsCb) : this.session.stopStatsLoop()); }\n\n  log(msg: string){ \n    this.ngZone.run(() => {\n      this.logText += (this.logText ? '\\n' : '') + msg;\n      this.cdr.detectChanges();\n      // Force textarea to scroll to bottom\n      queueMicrotask(() => {\n        const textarea = document.querySelector('textarea') as HTMLTextAreaElement;\n        if (textarea) {\n          textarea.scrollTop = textarea.scrollHeight;\n        }\n      });\n    });\n  }\n\n  dcStateClass(){ return { 'ok': this.dcState==='open', 'warn': this.dcState==='connecting', 'bad': this.dcState==='closed' || this.dcState==='closing' }; }\n  iceStateClass(){ return { 'ok': this.iceState==='connected' || this.iceState==='completed', 'warn': this.iceState==='checking', 'bad': this.iceState==='failed' || this.iceState==='disconnected' || this.iceState==='closed' }; }\n}\n","import { Injectable } from '@angular/core';\n\nexport type IceState = 'new'|'checking'|'connected'|'completed'|'failed'|'disconnected'|'closed';\nexport type DcState = 'connecting'|'open'|'closing'|'closed';\n\nexport type SessionCallbacks = {\n  onSignal: (data: any) => void;  // why: bubble up sdp/candidate\n  onIceState?: (state: IceState) => void;\n  onDcState?: (state: DcState) => void;\n  onDcMessage?: (text: string) => void;\n};\n\nexport class PeerSession {\n  pc: RTCPeerConnection;\n  dc?: RTCDataChannel;\n  private statsTimer?: any;\n\n  constructor(readonly initiator: boolean, stunUrl: string, private cb: SessionCallbacks){\n    this.pc = new RTCPeerConnection({ iceServers: [{ urls: stunUrl }] });\n    this.pc.onicecandidate = (e) => { if (e.candidate) this.cb.onSignal({ candidate: e.candidate }); };\n    this.pc.oniceconnectionstatechange = () => {\n      const s = this.pc.iceConnectionState as IceState;\n      this.cb.onIceState?.(s);\n    };\n    this.pc.ondatachannel = (e) => this.attachDc(e.channel);\n    if (initiator) {\n      // Configure data channel for low latency\n      const dc = this.pc.createDataChannel('chat', {\n        ordered: true, // Guarantee message order\n        maxRetransmits: 0 // Don't retry - better to show new messages than retry old ones\n      });\n      this.attachDc(dc);\n    }\n  }\n\n  private attachDc(dc: RTCDataChannel){\n    this.dc = dc;\n    this.cb.onDcState?.(dc.readyState as DcState);\n    dc.onopen = () => this.cb.onDcState?.(dc.readyState as DcState);\n    dc.onclose = () => this.cb.onDcState?.(dc.readyState as DcState);\n    dc.onmessage = (e) => this.cb.onDcMessage?.(String(e.data ?? ''));\n  }\n\n  async startOffer(){\n    const offer = await this.pc.createOffer({ offerToReceiveAudio:false, offerToReceiveVideo:false });\n    await this.pc.setLocalDescription(offer);\n    this.cb.onSignal({ sdp: this.pc.localDescription });\n  }\n\n  async handleRemoteSdp(sdp: RTCSessionDescriptionInit){\n    try {\n      // Check if we're in the right state for this type of SDP\n      if (sdp.type === 'offer') {\n        // We can accept offers in stable, have-local-offer, or have-remote-pranswer states\n        if (this.pc.signalingState === 'have-local-offer') {\n          console.warn('[WebRTC] Received offer while we have local offer - possible glare, ignoring');\n          return;\n        }\n      } else if (sdp.type === 'answer') {\n        // We should only accept answers when we have a local offer\n        if (this.pc.signalingState !== 'have-local-offer') {\n          console.warn(`[WebRTC] Received answer in wrong state: ${this.pc.signalingState}, ignoring`);\n          return;\n        }\n      }\n\n      await this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      \n      if (sdp.type === 'offer'){\n        const answer = await this.pc.createAnswer();\n        await this.pc.setLocalDescription(answer);\n        this.cb.onSignal({ sdp: this.pc.localDescription });\n      }\n    } catch (error) {\n      console.error(`[WebRTC] Failed to handle remote SDP (${sdp.type}):`, error);\n    }\n  }\n\n  async handleRemoteCandidate(candidate: RTCIceCandidateInit){\n    try { \n      // Check if remote description is set before adding ICE candidates\n      if (this.pc.remoteDescription) {\n        await this.pc.addIceCandidate(new RTCIceCandidate(candidate)); \n      } else {\n        console.warn('[WebRTC] Received ICE candidate before remote description, ignoring');\n      }\n    } catch (error) {\n      console.error('[WebRTC] Failed to add ICE candidate:', error);\n    }\n  }\n\n  send(text: string){\n    if (!this.dc || this.dc.readyState !== 'open') return;\n    try { this.dc.send(text); } catch {}\n  }\n\n  startStatsLoop(onStats: (value: any[]) => void){\n    this.stopStatsLoop();\n    this.statsTimer = setInterval(async () => {\n      try{\n        const stats = await this.pc.getStats();\n        const arr: any[] = [];\n        stats.forEach(s => {\n          if (['local-candidate','remote-candidate','candidate-pair'].includes((s as any).type)) arr.push(s);\n        });\n        onStats(arr);\n      }catch{}\n    }, 1000);\n  }\n  stopStatsLoop(){ if (this.statsTimer) { clearInterval(this.statsTimer); this.statsTimer = null; } }\n\n  close(){\n    this.stopStatsLoop();\n    try { this.dc?.close(); } catch {}\n    try { this.pc.close(); } catch {}\n  }\n}\n\n@Injectable()\nexport class RtcService {\n  createSession(initiator: boolean, stunUrl: string, cb: SessionCallbacks){\n    return new PeerSession(initiator, stunUrl, cb);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nexport type Inbound =\n  | { type: 'joined'; id: string; room: string }\n  | { type: 'peers'; id: string; peers: { id: string; nick?: string }[] }\n  | { type: 'signal'; from: string; data: any };\n\nexport type Outbound =\n  | { type: 'join'; room: string; nick?: string }\n  | { type: 'nick'; nick: string }\n  | { type: 'signal'; data: any; to?: string };\n\nexport type WsState = 'idle'|'connecting'|'open'|'closed'|'error';\n\n@Injectable()\nexport class SignalingService {\n  private ws?: WebSocket;\n  private url?: string;\n  private pendingJoin?: { room: string; nick?: string };\n\n  readonly state$ = new BehaviorSubject<WsState>('idle');\n  readonly joined$ = new Subject<{ id: string; room: string }>();\n  readonly peers$ = new BehaviorSubject<{ id: string; peers: {id: string; nick?: string}[] } | null>(null);\n  readonly signal$ = new Subject<{ from: string; data: any }>();\n\n  connect(url: string){\n    this.url = url;\n    if (this.ws && (this.ws.readyState === WebSocket.OPEN || this.ws.readyState === WebSocket.CONNECTING)) return;\n    this.state$.next('connecting');\n    this.ws = new WebSocket(url);\n    this.ws.onopen = () => {\n      this.state$.next('open');\n      if (this.pendingJoin) {\n        try { this.ws!.send(JSON.stringify({ type:'join', room: this.pendingJoin.room, nick: this.pendingJoin.nick })); } catch {}\n      }\n    };\n    this.ws.onclose = () => this.state$.next('closed');\n    this.ws.onerror = () => this.state$.next('error');\n    this.ws.onmessage = (ev) => {\n      let msg: Inbound;\n      try { msg = JSON.parse(String(ev.data)); } catch { return; }\n      if (msg.type === 'joined') this.joined$.next({ id: msg.id, room: msg.room });\n      else if (msg.type === 'peers') this.peers$.next({ id: msg.id, peers: msg.peers });\n      else if (msg.type === 'signal') this.signal$.next({ from: msg.from, data: msg.data });\n    };\n  }\n\n  send(obj: Outbound){\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) return;\n    try { this.ws.send(JSON.stringify(obj)); } catch {}\n  }\n\n  join(room: string, nick?: string){\n    this.pendingJoin = { room, nick };\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ type:'join', room, nick });\n    }\n  }\n\n  updateNick(nick: string){ this.send({ type: 'nick', nick }); }\n  sendSignal(data: any, to?: string){ this.send(to ? ({ type:'signal', data, to }) : ({ type:'signal', data })); }\n}\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { AppComponent } from './app/app.component';\nimport { APP_ROUTES } from './app/app.routes';\n\nbootstrapApplication(AppComponent, { providers: [provideRouter(APP_ROUTES)] })\n  .catch(err => console.error(err));\n"],"names":["RouterOutlet","AppComponent","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","encapsulation","HomeComponent","MonitorComponent","APP_ROUTES","path","component","redirectTo","CommonModule","PeerPaneComponent","constructor","room","wsUrl","stunUrl","stunHttp","peerA","nick","initiator","peerB","apply","HomeComponent_Template","ɵɵtext","ɵɵadvance","ɵɵproperty","styles","FormsModule","MetricsService","metrics","metricsJson","polling","toggle","_this","clearInterval","timer","tick","_ref","_asyncToGenerator","data","fetchMetrics","JSON","stringify","e","message","arguments","setInterval","ɵɵdirectiveInject","i1","ɵɵProvidersFeature","MonitorComponent_Template","ɵɵlistener","MonitorComponent_Template_button_click_5_listener","ɵɵtextInterpolate1","ɵɵtextInterpolate","url","r","fetch","cache","ok","Error","status","json","factory","ɵfac","SignalingService","RtcService","ɵɵtwoWayListener","PeerPaneComponent_textarea_27_Template_textarea_ngModelChange_0_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","iceText","ɵɵresetView","ɵɵtwoWayProperty","signal","rtc","ngZone","cdr","autoJoin","wsState","iceVisible","statsOn","logText","sendText","pendingSignals","joined","processedSdpIds","Set","_statsCb","arr","ngOnInit","state$","subscribe","s","joined$","id","log","setupSession","peers$","update","peers","length","config","session","startOffer","signal$","from","push","processSignalData","setTimeout","doJoin","ngOnDestroy","hangup","connect","join","close","clear","createSession","onSignal","run","sendSignal","onIceState","iceState","detectChanges","onDcState","dcState","onDcMessage","t","p","sdp","sdpId","type","slice","has","console","add","handleRemoteSdp","candidate","handleRemoteCandidate","undefined","send","trim","canSend","toggleStats","startStatsLoop","stopStatsLoop","msg","queueMicrotask","textarea","document","querySelector","scrollTop","scrollHeight","dcStateClass","iceStateClass","i2","NgZone","ChangeDetectorRef","inputs","PeerPaneComponent_Template","PeerPaneComponent_Template_button_click_19_listener","PeerPaneComponent_Template_button_click_21_listener","PeerPaneComponent_Template_button_click_23_listener","PeerPaneComponent_Template_textarea_ngModelChange_26_listener","ɵɵtemplate","PeerPaneComponent_textarea_27_Template","PeerPaneComponent_Template_input_ngModelChange_29_listener","PeerPaneComponent_Template_button_click_30_listener","ɵɵclassProp","i3","NgClass","NgIf","i4","DefaultValueAccessor","NgControlStatus","NgModel","PeerSession","cb","pc","RTCPeerConnection","iceServers","urls","onicecandidate","oniceconnectionstatechange","iceConnectionState","ondatachannel","attachDc","channel","dc","createDataChannel","ordered","maxRetransmits","readyState","onopen","onclose","onmessage","String","offer","createOffer","offerToReceiveAudio","offerToReceiveVideo","setLocalDescription","localDescription","_this2","signalingState","warn","setRemoteDescription","RTCSessionDescription","answer","createAnswer","error","_this3","remoteDescription","addIceCandidate","RTCIceCandidate","text","onStats","_this4","statsTimer","stats","getStats","forEach","includes","BehaviorSubject","Subject","ws","WebSocket","OPEN","CONNECTING","next","pendingJoin","onerror","ev","parse","obj","updateNick","to","bootstrapApplication","provideRouter","providers","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}